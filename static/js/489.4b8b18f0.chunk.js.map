{"version":3,"file":"static/js/489.4b8b18f0.chunk.js","mappings":"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","sources":["Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Post/MyPost.jsx","Components/Profile/Myposts/Post/MyPostContainer.js","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","webpack://react01/./src/Components/Users/users.module.css?917c","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileStatus.module.css?3fd8","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileInfo/ProfileContainer.jsx","hoc/withAuthNavigare.js","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport photosProfile from '../../../../assets/images/profilePhoto.jpeg'\r\nimport Button from '@mui/material/Button'\r\nimport Grid from '@mui/material/Grid'\r\nimport Avatar from '@mui/material/Avatar'\r\n\r\nconst Post = (props) => {\r\n\r\n    const [likesCount, setLikesCount] = useState(0)\r\n\r\n    function increment() {\r\n        setLikesCount((prevLikesCount) => {\r\n            return prevLikesCount + 1\r\n        })\r\n    }\r\n\r\n    return <Grid container sx={{ marginBottom: '20px' }}>\r\n        <Grid item xs={1}>  <Avatar src={photosProfile} /> </Grid>\r\n        <Grid item xs={10}>{props.message} </Grid>\r\n        <Grid item xs={1}>\r\n            <Button variant='text' onClick={increment} disabled={likesCount > 0} > {likesCount} likes</Button>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport Post from './Post'\r\nimport Button from '@mui/material/Button'\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\nimport List from '@mui/material/List'\r\n\r\nconst validationSchema = yup.object({\r\n    newPostText: yup\r\n        .string('Enter your message')\r\n        .required('Message is required')\r\n})\r\n\r\nconst MyPost = (props) => {\r\n    const postsElements =\r\n        props.posts.map(posts => <Post message={posts.message} likesCount={posts.likesCount} />)\r\n    const onAddPost = (values, { resetForm }) => {\r\n        props.addPost(values.newPostText)\r\n        resetForm({ newPostText: '' })\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPostText: ''\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: onAddPost\r\n    })\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Box sx={{ padding: '30px', flexGrow: 1 }}>\r\n                <h3> My posts </h3>\r\n                <Box component='form'\r\n                    noValidate\r\n                    onSubmit={formik.handleSubmit}\r\n                    sx={{ mt: 1, mb: 5 }}>\r\n                    <TextField margin='normal'\r\n                        fullWidth\r\n                        id='newPostText'\r\n                        label='Anything new?'\r\n                        name='newPostText'\r\n                        autoComplete='newPostText'\r\n                        value={formik.values.newPostText}\r\n                        onChange={formik.handleChange}\r\n                        error={formik.touched.newPostText && Boolean(formik.errors.newPostText)}\r\n                        helperText={formik.touched.newPostText && formik.errors.newPostText}\r\n                    />\r\n                    <Button variant='contained' type='submit' >Add post</Button>\r\n                </Box>\r\n                <Box item xs={10}>\r\n                    <List> {postsElements} </List>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPost\r\n","\r\nimport { addPostActionCreator } from \"../../../../Redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost) \r\n\r\nexport default MyPostContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profilePage\":\"ProfileInfo_profilePage__gHOFF\",\"profileInfo\":\"ProfileInfo_profileInfo__p2g9o\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__a-wYz\",\"information\":\"ProfileInfo_information__3kTd2\",\"fullName\":\"ProfileInfo_fullName__3qyWS\",\"profileStatus\":\"ProfileInfo_profileStatus__a-Udy\",\"contacts\":\"ProfileInfo_contacts__RFxAg\",\"button\":\"ProfileInfo_button__JmST6\"};","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__5NZl8\",\"myPhoto\":\"users_myPhoto__eesl0\",\"header\":\"users_header__6oDek\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusSpan\":\"ProfileStatus_statusSpan__+3Ulo\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport s from \"./ProfileStatus.module.css\"\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className = {s.statusSpan} onDoubleClick={activateEditMode} > {props.status || \"My status\"} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input className = {s.statusSpan}\r\n                    placeholder={'Set status'}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport { useFormik } from 'formik'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Box from '@mui/material/Box'\r\nimport * as yup from 'yup'\r\n\r\nconst validationSchema = yup.object({\r\n    fullName: yup\r\n        .string('Enter your fullname')\r\n        .required('Fullname is required'),\r\n})\r\n\r\nconst ProfileDataForm = ({ profile, isOwner, onSubmit, gotoViewMode }) => {\r\n    const formik = useFormik({\r\n        initialValues: profile,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => { onSubmit(values) }\r\n    })\r\n\r\n    return <div>\r\n        <Box sx={{ padding: '30px', flexGrow: 1 }}>\r\n            <Box component='form'\r\n                noValidate\r\n                onSubmit={formik.handleSubmit}\r\n                sx={{ mt: 1, mb: 5 }}>\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Your full name'\r\n                    name='fullName'\r\n                    autoComplete='fullName'\r\n                    value={formik.values.fullName}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.fullName && Boolean(formik.errors.fullName)}\r\n                    helperText={formik.touched.fullName && formik.errors.fullName}\r\n                />\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Tell us about yourself'\r\n                    name='aboutMe'\r\n                    autoComplete='aboutMe'\r\n                    value={formik.values.aboutMe}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <FormControlLabel name='lookingForAJob'\r\n                    control={<Checkbox checked={formik.values.lookingForAJob}\r\n                        onChange={formik.handleChange}\r\n                        color='primary' />}\r\n                    label='Are you looking for a job?'\r\n                />\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Tell us about professional skills'\r\n                    name='lookingForAJobDescription'\r\n                    autoComplete='lookingForAJobDescription'\r\n                    value={formik.values.lookingForAJobDescription}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Write your contacts on GitHub '\r\n                    name='contacts.github'\r\n                    autoComplete='contacts.github'\r\n                    value={formik.values.contacts.github}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Write your contacts on Vk '\r\n                    name='contacts.vk'\r\n                    autoComplete='contacts.vk'\r\n                    value={formik.values.contacts.vk}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Write your contacts on Twitter '\r\n                    name='contacts.twitter'\r\n                    autoComplete='contacts.twitter'\r\n                    value={formik.values.contacts.twitter}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                <TextField margin='normal'\r\n                    fullWidth\r\n                    label='Write your contacts on Instagram '\r\n                    name='contacts.instagram'\r\n                    autoComplete='contacts.instagram'\r\n                    value={formik.values.contacts.instagram}\r\n                    onChange={formik.handleChange}\r\n                />\r\n                {isOwner && <div> <Button variant='contained' type='submit' > Save </Button>\r\n                    <Button variant='text' onClick={gotoViewMode}  > Cancel </Button>\r\n                </div>\r\n                }\r\n            </Box>\r\n            <Box item xs={10}>\r\n            </Box>\r\n        </Box>\r\n    </div>\r\n}\r\n\r\nexport default ProfileDataForm\r\n","import React, { useState } from 'react'\r\nimport Preloader from '../../common/preloader/preloader'\r\nimport s from './ProfileInfo.module.css'\r\nimport styles from '../../Users/users.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataForm from './ProfileDataForm'\r\nimport Button from '@mui/material/Button'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport { blue } from '@mui/material/colors'\r\nimport Avatar from '@mui/material/Avatar'\r\n\r\nconst ProfileInfo = ({ profile, updateStatus, isOwner, savePhoto, saveProfile, status }) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        saveProfile(values)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <img src='https://img2.akspic.ru/previews/0/1/1/6/4/146110/146110-rev-lev-koshachih-tigr-monohromnyj-x750.jpg' className={styles.header} />\r\n            </div>\r\n            <div className={s.profilePage}>\r\n                <div className={s.descriptionBlock}>\r\n                {profile.photos.large != null ? <Avatar src= {profile.photos.large} sx={{ width: 200, height: 200 }} />\r\n                                :  <Avatar sx={{ bgcolor: blue[100], color: blue[600], width: 200, height: 200 }}>\r\n                                    <PersonIcon sx={{width: 200, height: 200}} />\r\n                                </Avatar>}\r\n        \r\n                    {isOwner && editMode && \r\n                     <Button variant='contained' component='label'>\r\n                     Upload\r\n                     <input hidden accept='image/*' type='file' onChange={onMainPhotoSelected} />\r\n                   </Button>\r\n                    }\r\n                    <div />\r\n                    <div className={s.information}>\r\n                        <div className={s.fullName}>  {profile.fullName} </div>\r\n                        <div className={s.profileStatus}><ProfileStatusWithHooks status={status} updateStatus={updateStatus} /> </div>\r\n                    </div>\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={profile}\r\n                            isOwner={isOwner}\r\n                            gotoViewMode={() => { setEditMode(false) }}\r\n                            updateStatus={updateStatus}\r\n                            onSubmit={onSubmit}\r\n                        />\r\n                        : <ProfileData profile={profile}\r\n                            isOwner={isOwner}\r\n                            gotoEditMode={() => { setEditMode(true) }}\r\n                            updateStatus={updateStatus} />}\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, status, updateStatus, isOwner, gotoEditMode, lookingForAJobDescription }) => {\r\n    return <div>\r\n        <div> About Me: {profile.aboutMe} </div>\r\n        <div> Looking For A Job : {profile.lookingForAJob ? \"yes\" : \"no\"} </div>\r\n        {profile.lookingForAJob &&\r\n            <div> My professional skills: {profile.lookingForAJobDescription} </div>}\r\n        <div> My professional skills: {profile.lookingForAJobDescription} </div>\r\n        <div> Contact GitHub: {profile.contacts.github} </div>\r\n        <div> Contact Vk: {profile.contacts.vk} </div>\r\n        <div> Contact Twitter: {profile.contacts.twitter} </div>\r\n        <div> Contact Instagram: {profile.contacts.instagram} </div>\r\n        {isOwner && <div> <Button variant='contained' onClick={gotoEditMode}> Edit </Button> </div>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from \"react\";\r\nimport MyPostContainer from \"./Myposts/Post/MyPostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} \r\n                saveProfile={props.saveProfile}\r\n                />\r\n            <MyPostContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { withAuthNavigate } from \"../../../hoc/withAuthNavigare\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserIdUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.router.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserIdUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        )\r\n    }\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForNavigate =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\nclass NavigateComponent extends React.Component {\r\n    render () {\r\n        if (!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n        return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\nlet ConnectedAuthNavigateComponent=connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\nreturn ConnectedAuthNavigateComponent;\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;"],"names":["props","useState","likesCount","setLikesCount","Grid","container","sx","marginBottom","item","xs","Avatar","src","photosProfile","message","Button","variant","onClick","prevLikesCount","disabled","validationSchema","yup","newPostText","required","postsElements","posts","map","formik","useFormik","initialValues","onSubmit","values","resetForm","addPost","Box","padding","flexGrow","component","noValidate","handleSubmit","mt","mb","TextField","margin","fullWidth","id","label","name","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","List","connect","state","profilePage","dispatch","addPostActionCreator","MyPost","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","placeholder","autoFocus","onBlur","updateStatus","e","currentTarget","fullName","profile","isOwner","gotoViewMode","aboutMe","FormControlLabel","control","Checkbox","checked","lookingForAJob","color","lookingForAJobDescription","contacts","github","vk","twitter","instagram","ProfileData","gotoEditMode","savePhoto","saveProfile","styles","photos","large","width","height","bgcolor","blue","Person","hidden","accept","target","files","length","ProfileContainer","userId","this","router","params","authorizedUserIdUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent","to","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}