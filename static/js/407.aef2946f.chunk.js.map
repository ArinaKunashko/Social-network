{"version":3,"file":"static/js/407.aef2946f.chunk.js","mappings":"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","sources":["webpack://react01/./src/Components/Profile/Myposts/Post/MyPost.module.css?0803","webpack://react01/./src/Components/Profile/Myposts/Post/Post.module.css?e8df","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Post/MyPost.jsx","Components/Profile/Myposts/Post/MyPostContainer.js","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileStatus.module.css?3fd8","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileDataForm.module.css?3258","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileInfo/ProfileContainer.jsx","hoc/withAuthNavigare.js","webpack://react01/./src/Components/Users/users.module.css?917c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPost_postsBlock__+9HRn\",\"posts\":\"MyPost_posts__7wLUc\",\"newPost\":\"MyPost_newPost__DeJDw\",\"textarea\":\"MyPost_textarea__j3VZq\",\"buttonAddPost\":\"MyPost_buttonAddPost__eYMkU\",\"errorMessage\":\"MyPost_errorMessage__RuIaE\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__THAqG\",\"buttonLikes\":\"Post_buttonLikes__d2KnD\"};","import React, {useState} from \"react\";\r\nimport s from './Post.module.css'\r\nimport photosProfile from '../../../../assets/images/profilePhoto.jpeg'\r\n\r\nconst Post = (props) => {\r\n\r\n    const [likesCount, setLikesCount] = useState(0)\r\n\r\n    function increment ( ) {\r\n        setLikesCount((prevLikesCount) => {\r\n            return prevLikesCount + 1\r\n        })\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.item}>\r\n            <img src={photosProfile} />\r\n            {props.message}\r\n    \r\n                <button className={s.buttonLikes} onClick ={increment} disabled={likesCount>0} > {likesCount} likes</button> \r\n    \r\n        </div>\r\n    </div>\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPost.module.css'\r\nimport Post from \"./Post\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nconst validateNewPostText = values => {\r\n    const errors = {};\r\n    if (!values.newPostText) {\r\n        errors.newPostText = \"Write something\";\r\n    }\r\n    return errors;\r\n};\r\n\r\n\r\nconst validateSchemaNewPostText = Yup.object().shape({\r\n\r\n    newPostText: Yup.string()\r\n        .min(1, \"Must be longer than 2 characters\")\r\n        .max(1000, \"Must be shorter than 10 characters\")\r\n        .required(\"Write something\")\r\n});\r\n\r\n\r\nconst MyPost = (props) => {\r\n    let postsElements =\r\n        props.posts.map(posts => <Post message={posts.message} likesCount={posts.likesCount} />)\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values, {resetForm}) => {\r\n        props.addPost(values.newPostText)\r\n        resetForm({ newPostText: ''})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My posts </h3>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    newPostText: \"\"\r\n                }}\r\n\r\n                onSubmit={onAddPost}\r\n                validate={validateNewPostText}\r\n                validationSchema={validateSchemaNewPostText}\r\n            >\r\n\r\n                {() => (\r\n                    <Form >\r\n                        <div>\r\n                            <div>\r\n                                <Field placeholder=\"Anything new?\"\r\n                                    name={'newPostText'}\r\n                                    type={'text'}\r\n                                    className={s.textarea}\r\n                                    ref={newPostElement}\r\n                                    values={props.newPostText} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ErrorMessage name=\"newPostText\" component=\"span\" className={s.errorMessage} />\r\n                            </div>\r\n\r\n                            <div> <button className={s.buttonAddPost} type='submit'> Add post</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form>\r\n                )\r\n                }</Formik>\r\n\r\n\r\n\r\n            <div className={s.newPost} >\r\n                New post\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n                <div className={s.item}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPost;","\r\nimport { addPostActionCreator } from \"../../../../Redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost) \r\n\r\nexport default MyPostContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profilePage\":\"ProfileInfo_profilePage__gHOFF\",\"profileInfo\":\"ProfileInfo_profileInfo__p2g9o\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__a-wYz\",\"information\":\"ProfileInfo_information__3kTd2\",\"fullName\":\"ProfileInfo_fullName__3qyWS\",\"profileStatus\":\"ProfileInfo_profileStatus__a-Udy\",\"contacts\":\"ProfileInfo_contacts__RFxAg\",\"button\":\"ProfileInfo_button__JmST6\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusSpan\":\"ProfileStatus_statusSpan__+3Ulo\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport s from \"./ProfileStatus.module.css\"\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className = {s.statusSpan} onDoubleClick={activateEditMode} > {props.status || \"My status\"} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input className = {s.statusSpan}\r\n                    placeholder={'Set status'}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ProfileDataForm_button__6rABp\"};","import React from \"react\";\r\nimport s from './ProfileDataForm.module.css'\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\n\r\nconst ProfileDataForm = (  { profile, isOwner, onSubmit, gotoViewMode} ) => {\r\n   debugger\r\n    return <div>\r\n \r\n        <Formik\r\n\r\n            initialValues={profile}\r\n\r\n            onSubmit={(values,) => {\r\n                onSubmit(values)\r\n               \r\n            }\r\n            }\r\n        >\r\n {({ touched }) => (\r\n        \r\n                <Form  >\r\n                    \r\n\r\n                        <div className={s.fullName}> Your Name: {profile.fullName}\r\n                            <Field\r\n                                name={'fullName'}\r\n                                type={'text'}\r\n                                placeholder={'Your Full Name'} />\r\n                        </div>\r\n                        {touched.fullName}\r\n\r\n\r\n\r\n                        <div> About Me: {profile.aboutMe}\r\n                            <Field\r\n                                name={'aboutMe'}\r\n                                type={'text'}\r\n                                placeholder={'Tell us about yourself'} />\r\n                        </div>\r\n                        {touched.aboutMe}\r\n\r\n\r\n                        <div>   Looking For A Job : \r\n                            <Field\r\n                                name={'lookingForAJob'}\r\n                                \r\n                                type={'checkbox'}\r\n                                placeholder={'Are you looking for a job?'} />\r\n                        </div>\r\n                        {touched.lookingForAJob}\r\n\r\n\r\n                            <div>  My professional skills: {profile.lookingForAJobDescription}\r\n                                <Field\r\n                                    name={'lookingForAJobDescription'}\r\n                                    type={'text'}\r\n                                    placeholder={'Tell us about professional skills'} />\r\n                            </div>\r\n                            {/* } */}\r\n\r\n                        {touched.lookingForAJobDescription}\r\n\r\n\r\n                        <div> Contact GitHub: {profile.contacts.github}\r\n                            <Field\r\n                                name={'contacts.github'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on GitHub '} />\r\n                        </div>\r\n                        {touched.github}\r\n                       \r\n\r\n                        <div> Contact Vk: {profile.contacts.vk} \r\n                        <Field\r\n                                name={'contacts.vk'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on Vk '} />\r\n                        </div>\r\n                        {touched.vk}\r\n                        \r\n\r\n                        <div> Contact Twitter: {profile.contacts.twitter}                             \r\n                        <Field\r\n                                name={'contacts.twitter'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on Twitter '} />\r\n                        </div>\r\n                        {touched.twitter}\r\n                        \r\n\r\n                        <div> Contact Instagram: {profile.contacts.instagram} \r\n                        <Field\r\n                                name={'contacts.instagram'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on Instagram '} />\r\n                        </div>\r\n                        {touched.instagram}\r\n                       \r\n\r\n\r\n\r\n                    \r\n                    \r\n                    {isOwner && <div> <button className={s.button} type={'submit'}  > Save </button>\r\n                    <button className={s.button}onClick={gotoViewMode}  > Cancel </button>\r\n                     </div>\r\n                    \r\n                    }\r\n\r\n                    \r\n                    \r\n                </Form>\r\n                \r\n            )}\r\n        </Formik>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default ProfileDataForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport s from './ProfileInfo.module.css'\r\nimport styles from '../../Users/users.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({ profile, updateStatus, isOwner, savePhoto, saveProfile, status }) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n\r\n            savePhoto(e.target.files[0])\r\n\r\n        }\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        saveProfile(values)\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n                <img src='https://img2.akspic.ru/previews/0/1/1/6/4/146110/146110-rev-lev-koshachih-tigr-monohromnyj-x750.jpg' className={styles.header} />\r\n            </div>\r\n            <div className={s.profilePage}>\r\n                <div className={s.descriptionBlock}>\r\n\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto} className={styles.myPhoto} />\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                    <div />\r\n\r\n                    <div className={s.information}>\r\n                        <div className={s.fullName}>  {profile.fullName} </div>\r\n                        <div className={s.profileStatus}><ProfileStatusWithHooks status={status} updateStatus={updateStatus} /> </div>\r\n                    </div>\r\n\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={profile}\r\n                            isOwner={isOwner}\r\n                            gotoViewMode={() => { setEditMode(false) }}\r\n                            updateStatus={updateStatus}\r\n                            onSubmit={onSubmit}\r\n\r\n\r\n                        />\r\n                        : <ProfileData profile={profile}\r\n                            isOwner={isOwner}\r\n                            gotoEditMode={() => { setEditMode(true) }}\r\n                            updateStatus={updateStatus} />}\r\n\r\n\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, status, updateStatus, isOwner, gotoEditMode, lookingForAJobDescription }) => {\r\n    return <div>\r\n\r\n\r\n        <div> About Me: {profile.aboutMe} </div>\r\n\r\n        <div> Looking For A Job : {profile.lookingForAJob ? \"yes\" : \"no\"} </div>\r\n\r\n        {profile.lookingForAJob &&\r\n            <div> My professional skills: {profile.lookingForAJobDescription} </div>}\r\n\r\n        <div> My professional skills: {profile.lookingForAJobDescription} </div>\r\n\r\n\r\n        <div> Contact GitHub: {profile.contacts.github} </div>\r\n        <div> Contact Vk: {profile.contacts.vk} </div>\r\n        <div> Contact Twitter: {profile.contacts.twitter} </div>\r\n        <div> Contact Instagram: {profile.contacts.instagram} </div>\r\n\r\n        {isOwner && <div> <button className={s.button} onClick={gotoEditMode}> Edit </button> </div>}\r\n\r\n    </div>\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostContainer from \"./Myposts/Post/MyPostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} \r\n                saveProfile={props.saveProfile}\r\n                />\r\n            <MyPostContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { withAuthNavigate } from \"../../../hoc/withAuthNavigare\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserIdUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.router.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserIdUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        )\r\n    }\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForNavigate =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\nclass NavigateComponent extends React.Component {\r\n    render () {\r\n        if (!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n        return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\nlet ConnectedAuthNavigateComponent=connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\nreturn ConnectedAuthNavigateComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__5NZl8\",\"myPhoto\":\"users_myPhoto__eesl0\",\"header\":\"users_header__6oDek\",\"buttonFollow\":\"users_buttonFollow__+clTR\"};"],"names":["props","useState","likesCount","setLikesCount","className","s","src","photosProfile","message","onClick","prevLikesCount","disabled","validateNewPostText","values","errors","newPostText","validateSchemaNewPostText","Yup","shape","min","max","required","postsElements","posts","map","newPostElement","React","initialValues","onSubmit","resetForm","addPost","validate","validationSchema","placeholder","name","type","ref","component","connect","state","profilePage","dispatch","addPostActionCreator","MyPost","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","isOwner","gotoViewMode","touched","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","github","vk","twitter","instagram","ProfileData","gotoEditMode","savePhoto","saveProfile","styles","photos","large","userPhoto","target","files","length","ProfileContainer","userId","this","router","params","authorizedUserIdUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent","to"],"sourceRoot":""}