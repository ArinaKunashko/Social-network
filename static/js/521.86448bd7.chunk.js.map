{"version":3,"file":"static/js/521.86448bd7.chunk.js","mappings":"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","sources":["Components/common/preloader/Paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","Redux/users-selectors.js","Components/Users/UsersContainer.js","hoc/withAuthNavigare.js"],"sourcesContent":["import React from 'react'\r\nimport Pagination from '@mui/material/Pagination'\r\nimport Stack from '@mui/material/Stack'\r\n\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const handlePageNumberChange = (event, value) => onPageChanged(value)\r\n\r\n    return <Stack spacing={2} alignItems='center' >\r\n         <Pagination count={pagesCount} \r\n         siblingCount={5}\r\n         size='large'\r\n         shape=\"rounded\" \r\n         onChange={handlePageNumberChange}\r\n         color='secondary'\r\n          />\r\n    </Stack >\r\n}\r\n\r\nexport default Paginator\r\n","import React from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Typography from '@mui/material/Typography'\r\nimport CardActionArea from '@mui/material/CardActionArea'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst User = ({ user, followingInProgress, unfollow, follow }) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n\r\n        <Box sx={{ padding: '20px 30px', flexGrow: 1, }}>\r\n            <Card sx={{ minWidth: 300, backgroundColor: '#ffffff' }}>\r\n                <CardActionArea onClick={() => navigate(`/profile/${user.id}`)} >\r\n                    <CardContent>\r\n                        <Grid container>\r\n                            <Grid item xs={5} md={2}>\r\n                                {user.photos.small != null ? <Avatar src={user.photos.small} sx={{ width: 100, height: 100 }} />\r\n                                    : <Avatar sx={{ bgcolor: '#004D40', color: '#004D40'[600], width: 100, height: 100 }}>\r\n                                        <PersonIcon sx={{ width: 50, height: 50 }} />\r\n                                    </Avatar>}\r\n                            </Grid>\r\n                            <Grid item xs={7} md={10}>\r\n                                <Typography variant=\"h5\" component='div'>\r\n                                    {user.name}\r\n                                </Typography>\r\n                                <Typography variant=\"h7\" component='div'>\r\n                                    {user.status}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    {user.followed\r\n                        ? <Button\r\n                            color='secondary'\r\n                            size='small'\r\n                            sx={{ margin: '7px 18px' }}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}> Unfollow </Button>\r\n                        : <Button\r\n                            color='secondary'\r\n                            size='small'\r\n                            sx={{ margin: '7px 18px' }}\r\n                            variant='outlined'\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                follow(user.id)\r\n                            }}> Follow </Button>}\r\n                </CardActions>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport Paginator from '../common/preloader/Paginator/Paginator'\r\nimport User from './User'\r\n\r\nlet Users = ({ currentPage, totalItemsCount, pageSize, onPageChanged, users, ...props }) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalItemsCount={totalItemsCount}\r\n            pageSize={pageSize} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                    key={u.id}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div >\r\n}\r\n\r\nexport default Users\r\n","import { createSelector } from 'reselect'\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFatching = (state) => {\r\n    return state.usersPage.isFatching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../Redux/users-reducer'\r\nimport Users from './Users'\r\nimport Preloader from '../common/preloader/preloader'\r\nimport { withAuthNavigate } from '../../hoc/withAuthNavigare'\r\nimport { compose } from 'redux'\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFatching, getFollowingInProgress, getUsers } from '../../Redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const { pageSize } = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFatching ? <Preloader /> : null}\r\n            <Users totalItemsCount={this.props.totalItemsCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFatching: getIsFatching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthNavigate,\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForNavigate =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\nclass NavigateComponent extends React.Component {\r\n    render () {\r\n        if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n        return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\nlet ConnectedAuthNavigateComponent=connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\nreturn ConnectedAuthNavigateComponent\r\n}"],"names":["totalItemsCount","pageSize","onPageChanged","currentPage","pagesCount","Math","ceil","Stack","spacing","alignItems","Pagination","count","siblingCount","size","shape","onChange","event","value","color","user","followingInProgress","unfollow","follow","navigate","useNavigate","Box","sx","padding","flexGrow","Card","minWidth","backgroundColor","CardActionArea","onClick","id","CardContent","Grid","container","item","xs","md","photos","small","Avatar","src","width","height","bgcolor","Person","Typography","variant","component","name","status","CardActions","followed","Button","margin","disabled","some","users","props","map","u","getUsers","createSelector","state","usersPage","filter","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFatching","isFatching","getFollowingInProgress","UsersContainer","pageNumber","this","React","compose","withAuthNavigate","connect","setCurrentPage","toggleFollowingProgress","requestUsers","mapStateToPropsForNavigate","isAuth","auth","Component","NavigateComponent","to"],"sourceRoot":""}