{"version":3,"file":"static/js/407.a2aa049b.chunk.js","mappings":"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","sources":["webpack://react01/./src/Components/Profile/Myposts/Post/MyPost.module.css?0803","webpack://react01/./src/Components/Profile/Myposts/Post/Post.module.css?e8df","Components/Profile/Myposts/Post/Post.jsx","Components/Profile/Myposts/Post/MyPost.jsx","Components/Profile/Myposts/Post/MyPostContainer.js","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileStatus.module.css?3fd8","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","webpack://react01/./src/Components/Profile/ProfileInfo/ProfileDataForm.module.css?3258","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileInfo/ProfileContainer.jsx","hoc/withAuthNavigare.js","webpack://react01/./src/Components/Users/users.module.css?917c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPost_postsBlock__+9HRn\",\"posts\":\"MyPost_posts__7wLUc\",\"newPost\":\"MyPost_newPost__DeJDw\",\"textarea\":\"MyPost_textarea__j3VZq\",\"buttonAddPost\":\"MyPost_buttonAddPost__eYMkU\",\"errorMessage\":\"MyPost_errorMessage__RuIaE\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__THAqG\",\"buttonLikes\":\"Post_buttonLikes__d2KnD\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport photosProfile from '../../../../assets/images/profilePhoto.jpeg'\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div>\r\n        <div className={s.item}>\r\n            <img src={photosProfile} />\r\n            {props.message}\r\n    \r\n                <button className={s.buttonLikes} > {props.likesCount} likes</button> \r\n    \r\n        </div>\r\n    </div>\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPost.module.css'\r\nimport Post from \"./Post\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nconst validateNewPostText = values => {\r\n    const errors = {};\r\n    if (!values.newPostText) {\r\n        errors.newPostText = \"Write something\";\r\n    }\r\n    return errors;\r\n};\r\n\r\n\r\nconst validateSchemaNewPostText = Yup.object().shape({\r\n\r\n    newPostText: Yup.string()\r\n        .min(1, \"Must be longer than 2 characters\")\r\n        .max(1000, \"Must be shorter than 10 characters\")\r\n        .required(\"Write something\")\r\n});\r\n\r\n\r\nconst MyPost = (props) => {\r\n    let postsElements =\r\n        props.posts.map(posts => <Post message={posts.message} likesCount={posts.likesCount} />)\r\n\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values, {resetForm}) => {\r\n        props.addPost(values.newPostText)\r\n        resetForm({ newPostText: ''})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My posts </h3>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    newPostText: \"\"\r\n                }}\r\n\r\n                onSubmit={onAddPost}\r\n                validate={validateNewPostText}\r\n                validationSchema={validateSchemaNewPostText}\r\n            >\r\n\r\n                {() => (\r\n                    <Form >\r\n                        <div>\r\n                            <div>\r\n                                <Field placeholder=\"Anything new?\"\r\n                                    name={'newPostText'}\r\n                                    type={'text'}\r\n                                    className={s.textarea}\r\n                                    ref={newPostElement}\r\n                                    values={props.newPostText} />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <ErrorMessage name=\"newPostText\" component=\"span\" className={s.errorMessage} />\r\n                            </div>\r\n\r\n                            <div> <button className={s.buttonAddPost} type='submit'> Add post</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form>\r\n                )\r\n                }</Formik>\r\n\r\n\r\n\r\n            <div className={s.newPost} >\r\n                New post\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n                <div className={s.item}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPost;","\r\nimport { addPostActionCreator } from \"../../../../Redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost) \r\n\r\nexport default MyPostContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profilePage\":\"ProfileInfo_profilePage__gHOFF\",\"profileInfo\":\"ProfileInfo_profileInfo__p2g9o\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__a-wYz\",\"information\":\"ProfileInfo_information__3kTd2\",\"fullName\":\"ProfileInfo_fullName__3qyWS\",\"profileStatus\":\"ProfileInfo_profileStatus__a-Udy\",\"contacts\":\"ProfileInfo_contacts__RFxAg\",\"button\":\"ProfileInfo_button__JmST6\"};","// extracted by mini-css-extract-plugin\nexport default {\"statusSpan\":\"ProfileStatus_statusSpan__+3Ulo\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport s from \"./ProfileStatus.module.css\"\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span className = {s.statusSpan} onDoubleClick={activateEditMode} > {props.status || \"My status\"} </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input className = {s.statusSpan}\r\n                    placeholder={'Set status'}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ProfileDataForm_button__6rABp\"};","import React from \"react\";\r\nimport s from './ProfileDataForm.module.css'\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\n\r\nconst ProfileDataForm = (  { profile, isOwner, onSubmit, gotoViewMode} ) => {\r\n   debugger\r\n    return <div>\r\n \r\n        <Formik\r\n\r\n            initialValues={profile}\r\n\r\n            onSubmit={(values,) => {\r\n                onSubmit(values)\r\n               \r\n            }\r\n            }\r\n        >\r\n {({ touched }) => (\r\n        \r\n                <Form  >\r\n                    \r\n\r\n                        <div className={s.fullName}> Your Name: {profile.fullName}\r\n                            <Field\r\n                                name={'fullName'}\r\n                                type={'text'}\r\n                                placeholder={'Your Full Name'} />\r\n                        </div>\r\n                        {touched.fullName}\r\n\r\n\r\n\r\n                        <div> About Me: {profile.aboutMe}\r\n                            <Field\r\n                                name={'aboutMe'}\r\n                                type={'text'}\r\n                                placeholder={'Tell us about yourself'} />\r\n                        </div>\r\n                        {touched.aboutMe}\r\n\r\n\r\n                        <div>   Looking For A Job : \r\n                            <Field\r\n                                name={'lookingForAJob'}\r\n                                \r\n                                type={'checkbox'}\r\n                                placeholder={'Are you looking for a job?'} />\r\n                        </div>\r\n                        {touched.lookingForAJob}\r\n\r\n\r\n                            <div>  My professional skills: {profile.lookingForAJobDescription}\r\n                                <Field\r\n                                    name={'lookingForAJobDescription'}\r\n                                    type={'text'}\r\n                                    placeholder={'Tell us about professional skills'} />\r\n                            </div>\r\n                            {/* } */}\r\n\r\n                        {touched.lookingForAJobDescription}\r\n\r\n\r\n                        <div> Contact GitHub: {profile.contacts.github}\r\n                            <Field\r\n                                name={'contacts.github'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on GitHub '} />\r\n                        </div>\r\n                        {touched.github}\r\n                       \r\n\r\n                        <div> Contact Vk: {profile.contacts.vk} \r\n                        <Field\r\n                                name={'contacts.vk'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on Vk '} />\r\n                        </div>\r\n                        {touched.vk}\r\n                        \r\n\r\n                        <div> Contact Twitter: {profile.contacts.twitter}                             \r\n                        <Field\r\n                                name={'contacts.twitter'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on Twitter '} />\r\n                        </div>\r\n                        {touched.twitter}\r\n                        \r\n\r\n                        <div> Contact Instagram: {profile.contacts.instagram} \r\n                        <Field\r\n                                name={'contacts.instagram'}\r\n                                type={'text'}\r\n                                placeholder={'Write your contacts on Instagram '} />\r\n                        </div>\r\n                        {touched.instagram}\r\n                       \r\n\r\n\r\n\r\n                    \r\n                    \r\n                    {isOwner && <div> <button className={s.button} type={'submit'}  > Save </button>\r\n                    <button className={s.button}onClick={gotoViewMode}  > Cancel </button>\r\n                     </div>\r\n                    \r\n                    }\r\n\r\n                    \r\n                    \r\n                </Form>\r\n                \r\n            )}\r\n        </Formik>\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default ProfileDataForm;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport s from './ProfileInfo.module.css'\r\nimport styles from '../../Users/users.module.css'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\nconst ProfileInfo = ({ profile, updateStatus, isOwner, savePhoto, saveProfile, status }) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n\r\n            savePhoto(e.target.files[0])\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const onSubmit = (values) => {\r\n        saveProfile(values)\r\n        setEditMode(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n\r\n                <img src='https://img2.akspic.ru/previews/0/1/1/6/4/146110/146110-rev-lev-koshachih-tigr-monohromnyj-x750.jpg' className={styles.header} />\r\n            </div>\r\n            <div className={s.profilePage}>\r\n                <div className={s.descriptionBlock}>\r\n\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto} className={styles.myPhoto} />\r\n                    {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n                    <div />\r\n\r\n                    <div className={s.information}>\r\n                        <div className={s.fullName}>  {profile.fullName} </div>\r\n                        <div className={s.profileStatus}><ProfileStatusWithHooks status={status} updateStatus={updateStatus} /> </div>\r\n                    </div>\r\n\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={profile}\r\n                            isOwner={isOwner}\r\n                            gotoViewMode={() => { setEditMode(false) }}\r\n                            updateStatus={updateStatus}\r\n                            onSubmit={onSubmit}\r\n\r\n\r\n                        />\r\n                        : <ProfileData profile={profile}\r\n                            isOwner={isOwner}\r\n                            gotoEditMode={() => { setEditMode(true) }}\r\n                            updateStatus={updateStatus} />}\r\n\r\n\r\n                </div>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, status, updateStatus, isOwner, gotoEditMode, lookingForAJobDescription }) => {\r\n    return <div>\r\n\r\n\r\n        <div> About Me: {profile.aboutMe} </div>\r\n\r\n        <div> Looking For A Job : {profile.lookingForAJob ? \"yes\" : \"no\"} </div>\r\n\r\n        {profile.lookingForAJob &&\r\n            <div> My professional skills: {profile.lookingForAJobDescription} </div>}\r\n\r\n        <div> My professional skills: {profile.lookingForAJobDescription} </div>\r\n\r\n\r\n        <div> Contact GitHub: {profile.contacts.github} </div>\r\n        <div> Contact Vk: {profile.contacts.vk} </div>\r\n        <div> Contact Twitter: {profile.contacts.twitter} </div>\r\n        <div> Contact Instagram: {profile.contacts.instagram} </div>\r\n\r\n        {isOwner && <div> <button className={s.button} onClick={gotoEditMode}> Edit </button> </div>}\r\n\r\n    </div>\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostContainer from \"./Myposts/Post/MyPostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} \r\n                saveProfile={props.saveProfile}\r\n                />\r\n            <MyPostContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React, { Component } from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../../Redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\"\r\nimport { withAuthNavigate } from \"../../../hoc/withAuthNavigare\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserIdUserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.router.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserIdUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        )\r\n    }\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthNavigate\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForNavigate =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthNavigate = (Component) => {\r\nclass NavigateComponent extends React.Component {\r\n    render () {\r\n        if (!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n        return <Component {...this.props}/>\r\n    }\r\n}\r\n\r\nlet ConnectedAuthNavigateComponent=connect(mapStateToPropsForNavigate)(NavigateComponent)\r\n\r\nreturn ConnectedAuthNavigateComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"users_userPhoto__5NZl8\",\"myPhoto\":\"users_myPhoto__eesl0\",\"header\":\"users_header__6oDek\",\"buttonFollow\":\"users_buttonFollow__+clTR\"};"],"names":["props","className","s","src","photosProfile","message","likesCount","validateNewPostText","values","errors","newPostText","validateSchemaNewPostText","Yup","shape","min","max","required","postsElements","posts","map","newPostElement","React","initialValues","onSubmit","resetForm","addPost","validate","validationSchema","placeholder","name","type","ref","component","connect","state","profilePage","dispatch","addPostActionCreator","MyPost","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","isOwner","gotoViewMode","touched","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","github","vk","twitter","instagram","onClick","ProfileData","gotoEditMode","savePhoto","saveProfile","styles","photos","large","userPhoto","target","files","length","ProfileContainer","userId","this","router","params","authorizedUserIdUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate","mapStateToPropsForNavigate","NavigateComponent","to"],"sourceRoot":""}